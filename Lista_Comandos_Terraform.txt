O que é o Terraform
	O terraform é uma ferramenta para construir, alterar e criar versões de infraestrutura com segurança e eficiencia através de código. 
	O terraform é uma linguaguem de programação desenvolvida pela HashiCorp open-source e declarativa
	O terraform é uma ferramenta de alto nível de orquestração de infraestrutura.
    Estrutura em blocos com linguagem HCL

No Terraform existem 08 tipos de blocos que podemos utilizar em nossos códigos e são eles:

- Terraform
- Providers (Informações do cloud provider)
- Resource	(bloco que irá providenciar os recursos para o provider)
- Data		(Menciona qual o tipo recurso ou serviço que vamos usar / pega uma informação externa e trás (busca) para dentro do código Terraform)
- Mudule		
- Variable	(serve para mencionar uma variavel que será usada dentro do Terraform)
- Output	( serve para colocar informações de saída do código)
- Locals	(serve para definir funções usadas com muita frequencia)

O bloco do Terraform aceitam 06 tipos diferentes de parametros: 

- required_version
- required_provider
- backend
- cloud
- experiments
- provider_meta

Main commands:

terraform -help 					Menu de ajuda com os comandos
terraform init						Prepara seu diretório de trabalho para outros comandos (Obrigatório qd se cria um novo diretório, alterações de versão etc)
terraform validate					Verifica se a configuração é válida. Só funciona depois da execução do terraform init
terraform plan						Mostra as alterações necessárias para a configuração atual. Mostra o plano de execução.
terraform apply						Cria ou atualiza infraestrutura
terraform destroy					Destrói infraestrutura criada anteriormente

All other commands:

terraform console       			Experimente expressões do Terraform em um prompt de comando interativo
terraform fmt           			Reformate sua configuração no estilo padrão
terraform force-unlock  			Libere um bloqueio travado no espaço de trabalho atual
terraform get           			Instale ou atualize módulos remotos do Terraform
terraform graph         			Gere um gráfico Graphviz das etapas de uma operação
terraform import        			Associar infraestrutura existente a um recurso do Terraform
terraform login         			Obter e salvar credenciais para um host remoto
terraform logout        			Remover credenciais armazenadas localmente para um host remoto
terraform metadata      			Comandos relacionados a metadados
terraform modules       			Mostrar todos os módulos declarados em um diretório de trabalho

terraform output        			Mostra valores de saída do seu módulo raiz
terraform providers     			Mostra os providers mencionados na configuração do código
terraform refresh       			Atualiza o estado para corresponder aos sistemas remotos
terraform show          			Mostra o estado atual ou um plano salvo
terraform state         			Gerenciamento avançado de estado
terraform taint         			Marca uma instância de recurso como não totalmente funcional
terraform test          			Executa testes de integração para módulos Terraform
terraform untaint       			Remove o estado 'tainted' de uma instância de recurso
terraform version       			Mostra a versão atual do Terraform
terraform workspace     			Gerenciamento de espaço de trabalho

terraform fmt -check				Faz uma verificação e sugere qual arquivo que precisa de uma formatação
terraform fmt -diff					Exibe onde foram feitas as correções

terraform plan -out none_do_arquivo_que_sera_salvo  (salva o arquivo do Plan no mesmo diretório)
terraform show		none_do_arquivo_que_sera_salvo  (lê o arquivo que foi salvo no mesmo diretório)

terraform apply -auto-aprove
terraform destroy -auto-aprove
terraform apply -destroy			Apaga toda a infra que foi criada
	
	
Global options (use-as antes do subcomando, se houver):

-chdir=DIR    	Alterna para um diretório de trabalho diferente antes de executar o subcomando fornecido.
-help         	Mostra esta saída de ajuda ou a ajuda para um subcomando especificado.
-version      	version Um alias para o subcomando "version".

terraform <Nome_Comando> -help 		Exibe mais informações/opções sobre um comando

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Preração para usar o terraform na máquina local. 

Intale o terraform


Instale o AWS CLI para Windows

Execute a linha abaixo no prompt de comandos (CMD)

msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi

O CLI será instalado no path abaixo

C:\Program Files\Amazon\AWSCLIV2\

Valide a instalação com o comando 

aws --version

Configuração das credenciais de acesso. 

Abra o prompt de comando:

Procure por "cmd" ou "PowerShell" no menu Iniciar e abra o prompt.

3. Execute o comando aws configure:
Este comando irá guiá-lo na configuração das credenciais e da região padrão.
AWS Access Key ID: Insira sua chave de acesso do AWS IAM.
AWS Secret Access Key: Insira sua chave de acesso secreta do AWS IAM.
Default region name: Escolha a região da AWS onde você deseja trabalhar (ex: us-east-1).
Default output format: Você pode escolher o formato de saída dos dados (ex: json, text, table).


4. Localização do arquivo credentials (chaves de acesso):
O arquivo com as credenciais (e o arquivo config com a região e formato) são criados em `C:\Users\USERNAME\.aws\` (substitua USERNAME pelo seu nome de usuário).